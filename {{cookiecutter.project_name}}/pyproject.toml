[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.friendly_name}}"
authors = ["{{cookiecutter.author}} <{{cookiecutter.email}}>"]
license = "{{cookiecutter.license}}"
readme = "README.md"
homepage = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
repository = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
documentation = "https://{{cookiecutter.project_name}}.readthedocs.io"
{% if cookiecutter.package_name != cookiecutter.project_name.replace('-', '_') -%}
packages = [
    { include = "{{cookiecutter.package_name}}", from = "src" },
]
{% endif -%}
classifiers = [
    "{{cookiecutter.development_status}}",
]

[tool.poetry.urls]
Changelog = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}/releases"

[tool.poetry.dependencies]
python = "^3.8"
click = ">=8.0.1"

[tool.poetry.group.test.dependencies]
pytest = ">=6.2.5"
coverage = {extras = ["toml"], version = ">=6.1"}
xdoctest = {extras = ["colors"], version = ">=0.15.10"}

[tool.poetry.group.dev.dependencies]
Pygments = ">=2.10.0"
black = "*"
darglint = ">=1.8.1"
mypy = "*"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
ruff = "*"
safety = ">=1.10.3"
typeguard = ">=2.13.3"
pip-audit = ">=2.8.0"

[tool.poetry.group.docs.dependencies]
furo = ">=2021.11.12"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
myst-parser = {version = ">=0.16.1"}

[tool.poetry.scripts]
{{cookiecutter.project_name}} = "{{cookiecutter.package_name}}.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
src = ['src', 'tests']
line-length = 88
lint.select = [
  'A',
  'ARG',
  'B',
  'B9',
  'BLE',
  'C',
  'C4',
  'D',
  'DTZ',
  'E',
  'F',
  'I',
  'N',
  'PIE',
  'PT',
  'PTH',
  'Q',
  'RET',
  'RUF',
  'S',
  'SIM',
  'SLF',
  'T10',
  'TCH',
  'UP',
  'W',
]
lint.ignore = [
  'D107',  # __init__ documentation is stored in the class docstring
]
target-version = 'py38'

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ['F401']
"tests/*" = [
    'S',
    'D212',
    'D415',
    'D205',
    'D104',
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.ruff.lint.isort]
force-single-line = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
